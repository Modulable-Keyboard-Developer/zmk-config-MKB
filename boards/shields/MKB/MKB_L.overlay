#include <dt-bindings/zmk/bt.h>
#include <input/processors.dtsi>
#include <dt-bindings/zmk/input_transform.h>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include "MKB_pinctrl_L.dtsi"
#include "MKB.dtsi"

// Available modules:
#if CONFIG_MKB_L_MODULE_TB
    &pinctrl {
        spi0_default: spi0_default {
            group1 {
                psels = <NRF_PSEL(SPIM_SCK, 0, 5)>,
                        <NRF_PSEL(SPIM_MOSI, 0, 4)>,
                        <NRF_PSEL(SPIM_MISO, 0, 4)>;
            };
        };

        spi0_sleep: spi0_sleep {
            group1 {
                psels = <NRF_PSEL(SPIM_SCK, 0, 5)>,
                        <NRF_PSEL(SPIM_MOSI, 0, 4)>,
                        <NRF_PSEL(SPIM_MISO, 0, 4)>;
                low-power-enable;
            };
        };
    };

    / {
        trackball_listener2 {
            status = "okay";
            device = <&trackball2>;
            scroll {
                layers = <1>;
                input-processors = <&zip_xy_transform (INPUT_TRANSFORM_Y_INVERT)>, <&zip_xy_transform (INPUT_TRANSFORM_X_INVERT)>, <&zip_xy_scaler 1 20>, <&zip_xy_to_scroll_mapper>;
                process-next;
            };
        };
    };

    &spi0 {
        status = "okay";
        compatible = "nordic,nrf-spim";
        pinctrl-0 = <&spi0_default>;
        pinctrl-1 = <&spi0_sleep>;
        pinctrl-names = "default", "sleep";
        cs-gpios = <&xiao_d 7 GPIO_ACTIVE_LOW>;

        trackball2: trackball@0 {
            status = "okay";
            compatible = "pixart,pmw3610";
            reg = <0>;
            spi-max-frequency = <2000000>;
            irq-gpios = <&xiao_d 8 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
            cpi = <600>;
            evt-type = <INPUT_EV_REL>;
            x-input-code = <INPUT_REL_X>;
            y-input-code = <INPUT_REL_Y>;
        };
    };
#elif CONFIG_MKB_L_MODULE_JOY
    &adc {
        status = "okay";
    };

    / {
    left_encoder: encoder_left {
        compatible = "alps,ec11";
        a-gpios = <&xiao_d 7 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        b-gpios = <&xiao_d 8 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        steps = <12>;
        status = "disabled";
    };

        anin0: analog_input_0 {
            compatible = "zmk,analog-input";
            sampling-hz = <100>;
            x-ch {
                io-channels = <&adc 2>;
                mv-mid = <1600>;
                mv-min-max = <1600>;
                mv-deadzone = <88>;
                scale-multiplier = <1>;
                scale-divisor = <800>;
                invert;
                evt-type = <INPUT_EV_REL>;
                input-code = <INPUT_REL_X>;
            };
            y-ch {
                io-channels = <&adc 3>;
                mv-mid = <1600>;
                mv-min-max = <1600>;
                mv-deadzone = <88>;
                scale-multiplier = <1>;
                scale-divisor = <800>;
                invert;
                evt-type = <INPUT_EV_REL>;
                input-code = <INPUT_REL_Y>;
            };
        };
        
        analog_input_listener {
            status = "okay";
            compatible = "zmk,input-listener";
            device = <&anin0>;
            input-processors = <&zip_xy_to_scroll_mapper>;
        };
    };

    &left_encoder {
        status = "okay";
    };
#elif CONFIG_MKB_L_MODULE_ENC
    / {
    left_encoder: encoder_left {
        compatible = "alps,ec11";
        a-gpios = <&xiao_d 7 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        b-gpios = <&xiao_d 8 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        steps = <12>;
        status = "disabled";
    };
    };

    &left_encoder {
        status = "okay";
    };
#endif

/ {
    chosen {
        zephyr,display = &oled;
    };

    split_inputs {
        #address-cells = <1>;
        #size-cells = <0>;

        trackball_split: trackball_split@0 {
            compatible = "zmk,input-split";
            reg = <0>;
        };
    };

    trackball_listener: trackball_listener {
        compatible = "zmk,input-listener";
        status = "okay";
        device = <&trackball_split>;
        input-processors = <&zip_temp_layer 3 700>;

        scroll {
            layers = <1>;
            input-processors = <&zip_xy_transform (INPUT_TRANSFORM_Y_INVERT)>, <&zip_xy_scaler 1 16>, <&zip_xy_to_scroll_mapper>;
        };
    };

    kscan0: kscan0 {
        compatible = "zmk,kscan-gpio-charlieplex";
        interrupt-gpios = <&xiao_d 6 (GPIO_ACTIVE_HIGH)>;
        gpios
            = <&xiao_d  0 (GPIO_ACTIVE_HIGH)>
            , <&xiao_d  1 (GPIO_ACTIVE_HIGH)>
            , <&xiao_d  2 (GPIO_ACTIVE_HIGH)>
            , <&xiao_d  3 (GPIO_ACTIVE_HIGH)>
            , <&gpio0   9 (GPIO_ACTIVE_HIGH)>
            , <&gpio0  10 (GPIO_ACTIVE_HIGH)>
            ;
    };
};

&xiao_i2c {
    status = "okay";
    compatible = "nordic,nrf-twi";
    pinctrl-0 = <&i2c0_default>;
    pinctrl-1 = <&i2c0_sleep>;
    pinctrl-names = "default", "sleep";
    
    clock-frequency = <100000>; 
    oled: ssd1306@3c {
        compatible = "solomon,ssd1306fb";
        reg = <0x3c>;
        width = <128>;
        height = <32>;
        segment-offset = <0>;
        page-offset = <0>;
        display-offset = <0>;
        multiplex-ratio = <31>;
        // segment-remap;
        // com-invdir;
        com-sequential;
        inversion-on;
        prechargep = <0x22>;
    };

    magnet: tlx493d@c {
        compatible = "infineon,tlx493d";
        reg = <0x0C>;
        status = "okay";
        hysteresis = <100>;
        center-threshold = <400>;
        calibration-samples = <300>;
    };
};

&xiao_serial { status = "disabled"; };
&uart0 { status = "disabled";};

